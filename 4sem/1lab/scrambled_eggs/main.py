import os
import pickle
from stove import *
from pan import *
from egg import *
from oil import *
from salt import *
from spices import *
from spatula import *
from dish import *
from states import *

class CookingStateMachine:
    def __init__(self):
        self.stove = Stove()
        self.pan = Pan(self.stove)
        self.egg = None  
        self.dish = Dish()
        self.oil = Oil()
        self.spatula = Spatula()

        self.state_actions = {
            1: self.toggle_stove,
            2: self.heat_pan,
            3: self.add_oil,
            4: self.heat_oil,
            5: self.take_eggs,
            6: self.add_egg,
            7: self.break_egg,
            8: self.add_salt,
            9: self.add_spices,
            10: self.fry,
            11: self.mix,
            12: self.serve,
            13: self.show_status,
            14: self.save_state,
            15: self.load_state,
            16: self.reset_state,
            0: self.exit_program
        }

    def show_menu(self):
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1: –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø–ª–∏—Ç—É")
        print("2: –†–∞–∑–æ–≥—Ä–µ—Ç—å —Å–∫–æ–≤–æ—Ä–æ–¥—É")
        print("3: –î–æ–±–∞–≤–∏—Ç—å –º–∞—Å–ª–æ –≤ —Å–∫–æ–≤–æ—Ä–æ–¥—É")
        print("4: –†–∞–∑–æ–≥—Ä–µ—Ç—å –º–∞—Å–ª–æ")
        print("5: –í–∑—è—Ç—å —è–π—Ü(–∞)")
        print("6: –î–æ–±–∞–≤–∏—Ç—å —è–π—Ü(–∞) –≤ —Å–∫–æ–≤–æ—Ä–æ–¥—É")
        print("7: –†–∞–∑–±–∏—Ç—å —è–π—Ü(–∞)")
        print("8: –î–æ–±–∞–≤–∏—Ç—å —Å–æ–ª—å")
        print("9: –î–æ–±–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏–∏")
        print("10: –û–±–∂–∞—Ä–∏—Ç—å —è–π—Ü(–∞)")
        print("11: –ü–µ—Ä–µ–º–µ—à–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫–æ–≤–æ—Ä–æ–¥—ã")
        print("12: –ü–æ–¥–∞—Ç—å –±–ª—é–¥–æ")
        print("13: –í—ã–≤–µ—Å—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤")
        print("14: –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ")
        print("15: –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ")
        print("16: –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ")
        print("0: –í—ã—Ö–æ–¥")
        print(" ")

    def execute_action(self, action):
        if action in self.state_actions:
            self.state_actions[action]()
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    def take_eggs(self):
        if self.egg is not None:  
            print("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –Ø–π—Ü–∞ —É–∂–µ –≤—ã–±—Ä–∞–Ω—ã!")
            return 

        try:
            quantity = int(input("–°–∫–æ–ª—å–∫–æ —è–∏—Ü –≤–∑—è—Ç—å (1-3)? ").strip())
            if 1 <= quantity <= 3:
                self.egg = Egg(quantity)
                print(f"{quantity} —è–π—Ü(–∞) –≤—ã–±—Ä–∞–Ω–æ.")
            else:
                print("–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–∏—Ü. –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç 1 –¥–æ 3.")
        except ValueError:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!")

    def toggle_stove(self):
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ (–≤–∫–ª—é—á–∏—Ç—å(1)/–≤—ã–∫–ª—é—á–∏—Ç—å(2) –ø–ª–∏—Ç—É): 1/2: ").strip().lower()
        if choice == "1":
            try:
                self.stove.turn_on()
            except ValueError as e:
                print(e)
        elif choice == "2":
            try:
                self.stove.turn_off(self.pan.get_state())
            except ValueError as e:
                print(e)
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")

    def heat_pan(self):
        try:
            self.pan.heat()
        except ValueError as e:
            print(e)

    def add_oil(self):
        try:
            self.pan.add_oil(self.oil)
        except ValueError as e:
            print(e)

    def heat_oil(self):
        try:
            self.pan.heat_oil()
        except ValueError as e:
            print(e)

    def break_egg(self):
        try:
            if self.egg is None:
                raise ValueError("–Ø–π—Ü–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã!")
            self.egg.break_egg()
        except ValueError as e:
            print(e)

    def add_egg(self):
        try:
            if self.egg is None:
                raise ValueError("–Ø–π—Ü–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã!")
            self.pan.add_ingredient(self.egg)
            print(f"{self.egg.quantity} —è–π—Ü(–∞) –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–∫–æ–≤–æ—Ä–æ–¥—É.")
        except ValueError as e:
            print(e)

    def add_salt(self):
        try:
            self.pan.add_ingredient(Salt())
        except ValueError as e:
            print(e)

    def add_spices(self):
        try:
            self.pan.add_ingredient(Spices())
        except ValueError as e:
            print(e)

    def fry(self):
        try:
            self.pan.fry()
        except ValueError as e:
            print(e)

    def mix(self):
        try:
            self.pan.mix(self.spatula)
        except ValueError as e:
            print(e)

    def serve(self):
        try:
            self.pan.transfer_to_dish(self.dish)
        except ValueError as e:
            print(e)

    def show_status(self):
        print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–∏—Ç—ã: {self.stove.state.value}")
        print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∫–æ–≤–æ—Ä–æ–¥—ã: {self.pan.state.value}")
        print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—Å–ª–∞: {self.pan.oil_state.value}")
        print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ —è–∏—Ü: {self.egg.state.value if self.egg else '–ù–µ—Ç —è–∏—Ü'}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {self.egg.quantity if self.egg else 0}")
        print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –ª–æ–ø–∞—Ç–∫–∏: {self.spatula.state.value}")
        print(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–ª—é–¥–∞: {self.dish.contents}")

    def save_state(self):
        with open("state.pkl", "wb") as f:
            pickle.dump({
                "stove": self.stove,
                "pan": self.pan,
                "egg": self.egg,
                "dish": self.dish,
                "oil": self.oil,
                "spatula": self.spatula
            }, f)
            print("–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")

    def load_state(self):
        try:
            with open("state.pkl", "rb") as f:
                state = pickle.load(f)
                self.stove = state["stove"]
                self.pan = state["pan"]
                self.egg = state["egg"]
                self.dish = state["dish"]
                self.oil = state["oil"]
                self.spatula = state["spatula"]
                print("–°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!")
        except FileNotFoundError:
            print("–§–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω!")

    def reset_state(self):
        if os.path.exists("state.pkl"):
            os.remove("state.pkl")
            print("–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ.")

        self.stove = Stove()
        self.pan = Pan(self.stove)
        self.egg = None
        self.dish = Dish()
        self.oil = Oil()
        self.spatula = Spatula()

        print("–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ —Å–±—Ä–æ—à–µ–Ω–æ!")

    def exit_program(self):
        print("–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")
        exit()

def main():
    cooking_machine = CookingStateMachine()
    print(" ")
    print("ü•öü•öü•ö–°–ò–ú–£–õ–Ø–¢–û–† –ü–†–ò–ì–û–¢–û–í–õ–ï–ù–ò–Ø –Ø–ò–ß–ù–ò–¶–´ü•öü•öü•ö")
    print(" ")
    while True:
        action = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è –∏–ª–∏ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –º–µ–Ω—é: ")
        print(" ")
        if action.isdigit():
            action = int(action)
            cooking_machine.execute_action(action)
        else:
            cooking_machine.show_menu()

if __name__ == "__main__":
    main()
